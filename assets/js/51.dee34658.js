(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{543:function(e,t,a){"use strict";a.r(t);var s=a(26),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"btcpay-deployment-frequently-asked-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#btcpay-deployment-frequently-asked-questions"}},[e._v("#")]),e._v(" BTCPay Deployment Frequently Asked Questions")]),e._v(" "),a("p",[e._v("This document covers the most common questions, errors, and issues you may encounter prior and during the installation of the software. For a detailed list of deployments method and instructions for each, please see "),a("RouterLink",{attrs:{to:"/Deployment.html"}},[e._v("Deployment page")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"general-deployment-faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-deployment-faq"}},[e._v("#")]),e._v(" General Deployment FAQ")]),e._v(" "),a("p",[e._v("Here are common questions about installation, regardless of the deployment method.")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-much-does-it-cost-to-run-btcpay-server"}},[e._v("How much does it cost to run BTCPay Server?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#what-are-the-minimal-requirements-for-btcpay"}},[e._v("What are the minimal requirements for BTCPay?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#what-are-the-minimal-requirements-for-btcpay"}},[e._v("What is the easiest method to deploy a self-hosted BTCPay Server?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-to-choose-a-proper-deployment-method"}},[e._v("How to choose a proper deployment method?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#can-i-run-btcpay-on-my-own-hardware"}},[e._v("Can I run BTCPay on my hardware?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#can-i-deploy-btcpay-on-my-existing-vps"}},[e._v("Can I deploy on my existing VPS?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#are-there-free-hosts-where-i-can-test"}},[e._v("Are there free hosts where I can test?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#after-initial-deployment-i-can-t-register-and-i-don-t-have-a-login-yet"}},[e._v("After initial deployment, I can't register and I don't have a login yet?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#with-the-docker-deployment-how-to-use-a-different-volume-for-the-data"}},[e._v("With the docker deployment, how to use a different volume for the data?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-do-i-activate-tor-on-my-btcpay-server"}},[e._v("How do I activate Tor on my BTCPay Server?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-do-i-disable-tor-on-my-btcpay-server"}},[e._v("How do I disable Tor on my BTCPay Server?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#why-activate-tor-does-it-mean-that-nobody-knows-who-i-am"}},[e._v("Why activate Tor? Does it mean that nobody knows who I am?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-to-access-the-onion-address-without-clearnet"}},[e._v("How to access the .onion address without clearnet?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-can-i-modify-deactivate-environment-variables"}},[e._v("How can I modify/deactivate environment variables?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-can-i-run-btcpay-on-testnet"}},[e._v("How can I run BTCPay on testnet?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#can-i-start-btcpay-only-when-i-m-expecting-a-payment"}},[e._v("Can I start BTCPay only when I'm expecting a payment?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#can-i-connect-to-my-btcpay-bitcoin-p2p-on-port-8333"}},[e._v("Can I connect to my BTCPay Bitcoin P2P on port 8333?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-do-i-completely-uninstall-btcpay-from-a-linux-environment-docker-version"}},[e._v("How do I completely uninstall BTCPay from a linux environment (docker version)")])],1)]),e._v(" "),a("h2",{attrs:{id:"web-deployment-faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-deployment-faq"}},[e._v("#")]),e._v(" Web Deployment FAQ")]),e._v(" "),a("h3",{attrs:{id:"luna-node-web-deployment-faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#luna-node-web-deployment-faq"}},[e._v("#")]),e._v(" Luna Node Web Deployment FAQ")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-to-change-domain-name-on-my-lunanode-btcpay"}},[e._v("How to change domain name on my LunaNode BTCPay?")])],1)]),e._v(" "),a("h2",{attrs:{id:"manual-deployment-faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manual-deployment-faq"}},[e._v("#")]),e._v(" Manual Deployment FAQ")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#how-to-manually-install-btcpay-on-ubuntu-18-04"}},[e._v("How to manually install BTCPay on Ubuntu 18.04?")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#i-get-503-service-temporarily-unavailable-nginx"}},[e._v("I get 503 Service Temporarily Unavailable nginx")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#cause-1-trying-to-access-my-btcpay-by-ip-address"}},[e._v("Cause 1: Trying to access my BTCPay by IP address")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#cause-2-btcpayserver-or-letsencrypt-nginx-proxy-is-not-running"}},[e._v("Cause 2: btcpayserver or letsencrypt-nginx-proxy is not running")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#cause-3-btcpay-is-expecting-you-to-access-this-website-from"}},[e._v("Cause 3: Error: BTCPay is expecting you to access this website from")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html#cause-4-getting-500-nginx-error-on-a-local-server-https-and-for-http-btcpay-is-expecting-you-to-access-this-website-from"}},[e._v("Cause 4: Getting 500 nginx error on a local server https and for http BTCPay is expecting you to access this website from")])],1)])],1)]),e._v(" "),a("h2",{attrs:{id:"general-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-deployment"}},[e._v("#")]),e._v(" General Deployment")]),e._v(" "),a("h3",{attrs:{id:"how-much-does-it-cost-to-run-btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-much-does-it-cost-to-run-btcpay-server"}},[e._v("#")]),e._v(" How much does it cost to run BTCPay Server?")]),e._v(" "),a("p",[e._v("BTCPay is a 100% free and open-source software. We do not charge you anything.\nHowever, to run it, you should host it. You can run it as a self-hosted solution on your own local server, or use a cloud hosting provider, which is what a majority of users do. Advanced users can run BTCPay on "),a("RouterLink",{attrs:{to:"/HardwareDeployment.html"}},[e._v("their own hardware")]),e._v(" Visit our "),a("RouterLink",{attrs:{to:"/Deployment.html"}},[e._v("Deployment Page")]),e._v(" to see various ways in which you can run BTCPay.\nIf you do not wish to host your own server, you should use a free host. If you prefer to have control over your node and additional features, you can use a cloud solution, which goes from 5$ to 65$ /month depending on the provider you choose.")],1),e._v(" "),a("h3",{attrs:{id:"what-are-the-minimal-requirements-for-btcpay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-minimal-requirements-for-btcpay"}},[e._v("#")]),e._v(" What are the minimal requirements for BTCPay?")]),e._v(" "),a("p",[e._v("If you would like to run Bitcoin and Lightning Network nodes, the minimal requirements are :")]),e._v(" "),a("ul",[a("li",[e._v("2GB Ram")]),e._v(" "),a("li",[e._v("80 GB of storage "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker/blob/master/README.md#generated-docker-compose",target:"_blank",rel:"noopener noreferrer"}},[e._v("with enabled pruning"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("Docker")])]),e._v(" "),a("h3",{attrs:{id:"what-is-the-easiest-method-to-deploy-a-self-hosted-btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-easiest-method-to-deploy-a-self-hosted-btcpay-server"}},[e._v("#")]),e._v(" What is the easiest method to deploy a self-hosted BTCPay Server?")]),e._v(" "),a("p",[e._v("For beginners, we strongly recommend the "),a("RouterLink",{attrs:{to:"/LunaNodeWebDeployment.html"}},[e._v("web-deployment")]),e._v(" if you want a self-hosted solution or a "),a("RouterLink",{attrs:{to:"/FAQ/ThirdPartyHosting.html"}},[e._v("third-party host")])],1),e._v(" "),a("p",[e._v("If you're going to add more than one crypto coin, you need to expand the storage according to that coin(s) blockchain size.")]),e._v(" "),a("h3",{attrs:{id:"how-to-choose-a-proper-deployment-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-choose-a-proper-deployment-method"}},[e._v("#")]),e._v(" How to choose a proper deployment method?")]),e._v(" "),a("p",[e._v("Please see "),a("RouterLink",{attrs:{to:"/Deployment.html"}},[e._v("Deployment page")]),e._v(" for comparison of different installation methods and choose the one that suits your needs and skill level the most.")],1),e._v(" "),a("h3",{attrs:{id:"can-i-run-btcpay-on-my-own-hardware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#can-i-run-btcpay-on-my-own-hardware"}},[e._v("#")]),e._v(" Can I run BTCPay on my own hardware?")]),e._v(" "),a("p",[e._v("Yes, you can. Check our the "),a("RouterLink",{attrs:{to:"/HardwareDeployment.html"}},[e._v("Hardware Deployment page")]),e._v(" for detailed instructions.")],1),e._v(" "),a("h3",{attrs:{id:"can-i-deploy-btcpay-on-my-existing-vps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#can-i-deploy-btcpay-on-my-existing-vps"}},[e._v("#")]),e._v(" Can I deploy BTCPay on my existing VPS?")]),e._v(" "),a("p",[e._v("Yes. BTCPay is not limited to the documented deployment methods. You can use whichever hosting solution you prefer, that fits the minimal requirements.")]),e._v(" "),a("h3",{attrs:{id:"are-there-free-hosts-where-i-can-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#are-there-free-hosts-where-i-can-test"}},[e._v("#")]),e._v(" Are there free hosts where I can test?")]),e._v(" "),a("p",[e._v("On a self-hosted BTCPay, the unlimited amount of users and stores can be attached. That's why there are users who opened their servers for others to use. Most of them are community-driven and free. See this list of "),a("RouterLink",{attrs:{to:"/ThirdPartyHosting.html"}},[e._v("third-party BTCPay hosts")])],1),e._v(" "),a("h3",{attrs:{id:"after-initial-deployment-i-can-t-register-and-i-don-t-have-a-login-yet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after-initial-deployment-i-can-t-register-and-i-don-t-have-a-login-yet"}},[e._v("#")]),e._v(" After initial deployment, I can't register and I don't have a login yet?")]),e._v(" "),a("p",[e._v("When you deploy your BTCPay Server, you should first register a user (during server synchronization). This user is automatically the server admin. If your BTCPay only shows Login in the header menu, and you are unable to register the first user after initial deployment, someone else has registered on your server as the admin. Although this is unlikely to occur (the user would need to know and watch your BTCPay domain name), they had access to your ssh private keys, thus you should redeploy a new server for security reasons.")]),e._v(" "),a("h3",{attrs:{id:"with-the-docker-deployment-how-to-use-a-different-volume-for-the-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-the-docker-deployment-how-to-use-a-different-volume-for-the-data"}},[e._v("#")]),e._v(" With the docker deployment, how to use a different volume for the data?")]),e._v(" "),a("p",[e._v("First, you need to make sure that btcpayserver and docker is not running")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("su")]),e._v(" -\nbtcpay-down.sh\nsystemctl stop docker\n")])])]),a("p",[e._v("Now, you need to format your drive. If you already did you can skip this step.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Step 1: Unplug the drive")]),e._v("\nlsblk\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Step 2: Plug the drive")]),e._v("\nlsblk\n")])])]),a("p",[e._v("The second "),a("code",[e._v("lsblk")]),e._v(" should show the drive you just plugged in. (of TYPE "),a("code",[e._v("disk")]),e._v(")\nMake sure you don't make a mistake as the next command will erase all data on this disk.")]),e._v(" "),a("p",[e._v("For the sake of the example, let's suppose it has the NAME "),a("code",[e._v("/dev/sdd")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Save the name in a variable")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DEVICE_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/dev/sdd"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set the partition name")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PARTITION_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/dev/sdd1"')]),e._v("\n")])])]),a("p",[e._v("Now we can partition the disk and format the partition:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Partitioning the external drive '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DEVICE_NAME")]),e._v('..."')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("### DANGER ZONE ###")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" o "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Create a new empty DOS partition table")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" n "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Add a new partition")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" p "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Primary partition")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Partition number")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# First sector (Accept default: 1)")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Last sector (Accept default: varies)")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" w "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Write changes")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("fdisk")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DEVICE_NAME}")]),e._v("\npartprobe "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DEVICE_NAME}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" lsblk "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PARTITION_NAME")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&>")]),e._v(" /dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sleep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v("\nmkfs.ext4 -F "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PARTITION_NAME")]),e._v('"')]),e._v("\n")])])]),a("p",[e._v("Then we need to mount the partition on the linux filesystem.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Mounting the partition")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MOUNT_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/mnt/external"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mount")]),e._v(" -o defaults,noatime "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PARTITION_NAME")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure the partition exists at the next reboot, we use UUID in case")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the partition name is different in the next reboot")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -qF "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),e._v(" /etc/fstab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("UUID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" blkid -s UUID -o value $PARTITION_NAME"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"UUID='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$UUID")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v(' ext4 defaults,noatime,nofail 0 2"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/fstab\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Then, we need to make sure that docker not start before the mount.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MOUNT_UNIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("systemd-escape --path "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('.mount"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("docker_service")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/lib/systemd/system/docker.service"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -qF "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"After='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_UNIT")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$docker_service")]),e._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s/After=/After='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_UNIT")]),e._v(' /g"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$docker_service")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Now, imagine you want to put all the docker volume data on the previous partition")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DOCKER_VOLUMES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/var/lib/docker/volumes"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Copy all the data from our volume to the mount directory (this can take a while)")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" -a -r "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v('/."')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make the folder a mountpoint")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -rf "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mount")]),e._v(" --bind "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure the mountpoint is mounted after reboot")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -qF "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v('"')]),e._v(" /etc/fstab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MOUNT_DIR")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DOCKER_VOLUMES")]),e._v(' none bind,nobootwait 0 2"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" /etc/fstab\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Now restart docker and btcpayserver")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("systemctl start docker\nbtcpay-up.sh\n")])])]),a("p",[e._v("Note: We use mount bind instead of symbolic link because docker would complain when running "),a("code",[e._v("docker volume rm")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"how-to-deploy-btcpay-server-alongside-existing-bitcoin-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-deploy-btcpay-server-alongside-existing-bitcoin-node"}},[e._v("#")]),e._v(" How to deploy BTCPay Server alongside existing Bitcoin node?")]),e._v(" "),a("p",[e._v("The instructions below are valid for Docker deployments:")]),e._v(" "),a("ul",[a("li",[e._v("Run setup as described in "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker#full-installation-for-technical-users",target:"_blank",rel:"noopener noreferrer"}},[e._v("btcpayserver-docker"),a("OutboundLink")],1),e._v(" up until "),a("code",[e._v(". ./btcpay-setup.sh -i")])]),e._v(" "),a("li",[e._v("Create "),a("code",[e._v("bitcoin.custom.yml")]),e._v(" in the "),a("code",[e._v("docker-compose-generator/docker-fragments/")]),e._v(" folder.")])]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"3"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("btcpayserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("BTCPAY_CHAINS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"btc"')]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("BTCPAY_BTCEXPLORERURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//nbxplorer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("32838/\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("nbxplorer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("NBXPLORER_CHAINS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"btc"')]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("NBXPLORER_BTCRPCURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//host.docker.internal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("43782/\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("NBXPLORER_BTCNODEENDPOINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" host.docker.internal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("39388")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"localBitcoinfolder:/root/.bitcoin"')]),e._v("\n")])])]),a("ul",[a("li",[e._v("Replace: "),a("code",[e._v("43782")]),e._v(" with your bitcoin node's configured RPC port")]),e._v(" "),a("li",[e._v("Replace: "),a("code",[e._v("39388")]),e._v(" with your bitcoin node's configured p2p port")]),e._v(" "),a("li",[e._v("Replace "),a("code",[e._v("localBitcoinfolder")]),e._v(" with the path to your bitcoin data folder")])]),e._v(" "),a("p",[e._v("If you are running on linux, due to "),a("a",{attrs:{href:"https://github.com/docker/for-linux/issues/264",target:"_blank",rel:"noopener noreferrer"}},[e._v("a limitation of docker"),a("OutboundLink")],1),e._v(", you will also need to do the following:")]),e._v(" "),a("ul",[a("li",[e._v("Run "),a("code",[e._v("ip route | grep docker0 | awk '{print $9}'")]),e._v(" "),a("ul",[a("li",[e._v("Add the following at the end of the "),a("code",[e._v("bitcoin.custom.yml")]),e._v(" file, replacing "),a("code",[e._v("$DOCKER_HOST_IP")]),e._v(" with the result of the previous command.")])])])]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[e._v("      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("extra_hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"host.docker.internal:$DOCKER_HOST_IP"')]),e._v("\n")])])]),a("ul",[a("li",[e._v("Run "),a("code",[e._v('BTCPAYGEN_EXCLUDE_FRAGMENTS="bitcoin"')])]),e._v(" "),a("li",[e._v("Run "),a("code",[e._v('BTCPAYGEN_ADDITIONAL_FRAGMENTS="$BTCPAYGEN_ADDITIONAL_FRAGMENTS"')])]),e._v(" "),a("li",[e._v("Run "),a("code",[e._v(". ./btcpay-setup.sh -i")])])]),e._v(" "),a("h3",{attrs:{id:"how-do-i-activate-tor-on-my-btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-activate-tor-on-my-btcpay-server"}},[e._v("#")]),e._v(" How do I activate Tor on my BTCPay Server?")]),e._v(" "),a("p",[e._v("Tor is activated by default on the docker deployment.")]),e._v(" "),a("h3",{attrs:{id:"how-do-i-disable-tor-on-my-btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-disable-tor-on-my-btcpay-server"}},[e._v("#")]),e._v(" How do I disable Tor on my BTCPay Server?")]),e._v(" "),a("p",[e._v("That's really easy: just log in your instance with SSH, and enter as root the enter following commands:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BTCPAYGEN_EXCLUDE_FRAGMENTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BTCPAYGEN_EXCLUDE_FRAGMENTS")]),e._v(';opt-add-tor"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n")])])]),a("p",[e._v("Then wait a few minutes for the server to restart, and you're done!")]),e._v(" "),a("h3",{attrs:{id:"why-activate-tor-does-it-mean-that-nobody-knows-who-i-am"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-activate-tor-does-it-mean-that-nobody-knows-who-i-am"}},[e._v("#")]),e._v(" Why activate Tor? Does it mean that nobody knows who I am?")]),e._v(" "),a("p",[e._v("Tor for BTCPay server is intended more as an improvement of the setup process, and allows for more flexibility for hosting on one's own device at home or in an office.")]),e._v(" "),a("p",[e._v("Having Tor activated would allow for simpler, plug-and-play usage of BTCPay, as it suppress the need for the following configuration steps:")]),e._v(" "),a("ul",[a("li",[e._v("Opening multiple ports on the firewall")]),e._v(" "),a("li",[e._v("Configuring the NAT for port redirection to your device on your local network")]),e._v(" "),a("li",[e._v("Setting up a DNS entry to get a HTTPS certificate")]),e._v(" "),a("li",[e._v("Having a fixed IP for Lightning")])]),e._v(" "),a("p",[e._v("While these steps are usually not a problem when BTCPay is hosted on a VPS, it can be difficult to solve for non-technical users on home or office networks.")]),e._v(" "),a("p",[e._v("Tor just solves all these issues in one shot, all you have to do is plug your device on the local network. It is especially useful for POS application.")]),e._v(" "),a("p",[e._v("But if you're looking for perfect privacy and security, "),a("strong",[e._v("activating Tor with your BTCPay just won't do it.")])]),e._v(" "),a("p",[e._v("Tor is a really tricky software to use for developers, as the slightest mistake can tear down the anonymity it provides. As BTCPay is evolving into a rather complex service and adding more and more plugins, even if we tried to route all this traffic through Tor, we couldn't guarantee that there would never be leaks of data in clear.")]),e._v(" "),a("p",[e._v("We think that the illusion of security is more dangerous that no security, or at least security we know is imperfect. So be aware that activating Tor doesn't prevent others to connect to your instance website, your bitcoin or lightning node in clear, "),a("strong",[e._v("it doesn't make you anonymous at all.")])]),e._v(" "),a("p",[e._v("If you want to know more about the philosophy behind all this, you can read our "),a("a",{attrs:{href:"https://medium.com/@BtcpayServer/about-tor-and-btcpay-server-2ec1e4bd5e51",target:"_blank",rel:"noopener noreferrer"}},[e._v("article on  Medium"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"how-to-access-the-onion-address-without-clearnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-access-the-onion-address-without-clearnet"}},[e._v("#")]),e._v(" How to access the .onion address without clearnet?")]),e._v(" "),a("p",[e._v("To see the .onion address of your BTCPay instance without accessing it through the clearnet and clicking the Tor logo in top left corner, apply the following command:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /var/lib/docker/volumes/generated_tor_servicesdir/_data/BTCPayServer/hostname\n")])])]),a("h3",{attrs:{id:"how-can-i-modify-deactivate-environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-can-i-modify-deactivate-environment-variables"}},[e._v("#")]),e._v(" How can I modify/deactivate environment variables?")]),e._v(" "),a("p",[e._v("In BTCPay, various options are activated through environment variables. You can modify or delete any of these options using command lines by exporting the new value with "),a("code",[e._v('export {environment variable}="{value}"')]),e._v(" and then running "),a("code",[e._v(". ./btcpay-setup.sh -i")]),e._v(" again.")]),e._v(" "),a("p",[e._v("For example, let's say I want to deactivate Tor for my BTCPay server:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Login as root")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("su")]),e._v(" -\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Go to the root/btcpayserver-docker directory")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /root/btcpayserver-docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Print the complete list of options that you are running (for the sake of the demonstration, let's say that beside Tor you have pruning mode activated too)")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BTCPAYGEN_ADDITIONAL_FRAGMENTS")]),e._v("\nopt-save-storage-s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("opt-add-tor\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Export the BTCPAYGEN_ADDITIONAL_FRAGMENTS variable without opt-add-tor")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BTCPAYGEN_ADDITIONAL_FRAGMENTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"opt-save-storage-s"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Run btcpay-setup.sh")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v("\n")])])]),a("p",[e._v("If you need to figure out which environment variable you need to modify, have a look at "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker#environment-variables",target:"_blank",rel:"noopener noreferrer"}},[e._v("this list"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"how-can-i-run-btcpay-on-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-can-i-run-btcpay-on-testnet"}},[e._v("#")]),e._v(" How can I run BTCPay on testnet?")]),e._v(" "),a("p",[e._v("Building on the section above, this is how you configure BTCPay to use "),a("code",[e._v("testnet")]),e._v(" instead of the default "),a("code",[e._v("mainnet")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Export the NBITCOIN_NETWORK variable switching to testnet")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NBITCOIN_NETWORK")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"testnet"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Run btcpay-setup.sh for the change to take effect")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n")])])]),a("p",[e._v("If you just want to test things quickly without deploying everything yourself, have a look at the "),a("RouterLink",{attrs:{to:"/TryItOut.html"}},[e._v("Try It Out")]),e._v(" section.\nIt provides links and explanations for a BTCPay testnet instance hosted by us.")],1),e._v(" "),a("h3",{attrs:{id:"can-i-start-btcpay-only-when-i-m-expecting-a-payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#can-i-start-btcpay-only-when-i-m-expecting-a-payment"}},[e._v("#")]),e._v(" Can I start BTCPay only when I'm expecting a payment?")]),e._v(" "),a("p",[e._v("No, you need to keep your BTCPay running at all times so that your Bitcoin node stays in sync with the blockchain to verify transactions. If you only start it up every now and then, it would take a long time to catch up on verifying recent blocks, and your payments would not show up until much later.")]),e._v(" "),a("h3",{attrs:{id:"can-i-connect-to-my-btcpay-bitcoin-p2p-on-port-8333"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#can-i-connect-to-my-btcpay-bitcoin-p2p-on-port-8333"}},[e._v("#")]),e._v(" Can I connect to my BTCPay Bitcoin P2P on port 8333?")]),e._v(" "),a("p",[e._v("BTCPay's Bitcoin core node is not exposed externally by default. For BTCPay purposes, it is typically not in the interest of the user, as it increases the bandwidth requirement. BTCPay is also whitebinding connections to this port, so opening it would expose the node to potential DDoS.")]),e._v(" "),a("p",[e._v("However, we expose a P2P connection to your full node on Tor. You can get the Tor address by running:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /var/lib/docker/volumes/generated_tor_servicesdir/_data/BTC-P2P/hostname\n")])])]),a("p",[e._v("Or via the "),a("code",[e._v("Server Settings")]),e._v(" of your BTCPay Server instance, logged as an administrator.")]),e._v(" "),a("p",[e._v("Please do not share this tor hidden service with untrusted parties. Connections to this hidden service are whitelisted by the bitcoin node, malicious peer would be able to DDoS your node.")]),e._v(" "),a("p",[e._v("If you need to unsafely expose bitcoind P2P port 8333 (for example if you require P2P for Bisq, DOJO, Esplora, etc.) and you are using a docker deployment, you can use the "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker#generated-docker-compose-",target:"_blank",rel:"noopener noreferrer"}},[e._v("opt-unsafe-expose"),a("OutboundLink")],1),e._v("\nadditional fragment. WARNING: ONLY USE ON TRUSTED LAN OR WITH FIREWALL RULES WHITELISTING SPECIFIC HOSTS")]),e._v(" "),a("h3",{attrs:{id:"can-i-use-an-existing-nginx-server-as-a-reverse-proxy-with-ssl-termination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#can-i-use-an-existing-nginx-server-as-a-reverse-proxy-with-ssl-termination"}},[e._v("#")]),e._v(" Can I use an existing Nginx server as a reverse proxy with SSL termination?")]),e._v(" "),a("p",[e._v("Yes you can! Just make sure to use the proper configuration.")]),e._v(" "),a("p",[e._v("Create an extra config file for your vhost in "),a("code",[e._v("/etc/nginx/sites-available/btcpayserver")]),e._v(" and create a symlink for this file at "),a("code",[e._v("/etc/nginx/sites-enabled/btcpayserver")])]),e._v(" "),a("p",[e._v("The contents of this vhost file should look like this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server {\n\tlisten 80;\n\n\troot /var/www/html;\n\tindex index.html index.htm index.nginx-debian.html;\n\n\t# Put your domain name here\n\tserver_name btcpay.domain.com;\n\n\t# Needed for Let's Encrypt verification\n\tlocation ~ /.well-known {\n\t\tallow all;\n\t}\n\n\t# Force HTTP to HTTPS\n\tlocation / {\n\t\treturn 301 https://$http_host$request_uri;\n\t}\n}\n\nserver {\n\tlisten 443 ssl http2;\n\n\tssl on;\n\n\t# SSL certificate by Let's Encrypt in this Nginx (not using Let's Encyrpt that came with BTCPay Server Docker)\n\tssl_certificate      /etc/letsencrypt/live/btcpay.domain.com/fullchain.pem;\n\tssl_certificate_key  /etc/letsencrypt/live/btcpay.domain.com/privkey.pem;\n\n\troot /var/www/html;\n\tindex index.html index.htm index.nginx-debian.html;\n\n\t# Put your domain name here\n\tserver_name btcpay.domain.com;\n\n\t# Route everything to the real BTCPay server\n\tlocation / {\n\t\t# URL of BTCPay Server (i.e. a Docker installation with REVERSEPROXY_HTTP_PORT set to 10080)\n\t\tproxy_pass http://127.0.0.1:10080;\n\n\t\tproxy_set_header Host $http_host;\n\t\tproxy_set_header X-Forwarded-Proto $scheme;\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n\t\t# For websockets (used by Ledger hardware wallets)\n\t\tproxy_set_header Upgrade $http_upgrade;\n\t}\n\n\t# Needed for Let's Encrypt verification\n\tlocation ~ /.well-known {\n\t\tallow all;\n\t}\n}\n\n")])])]),a("p",[e._v("Also, put the following in your main Nginx config file at "),a("code",[e._v("/etc/nginx/nginx.conf")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http {\n\n\t# ... # Existing stuff\n\n\t# Needed to allow very long URLs to prevent issues while signing PSBTs\n\tserver_names_hash_bucket_size 128;\n\tproxy_buffer_size          128k;\n\tproxy_buffers              4 256k;\n\tproxy_busy_buffers_size    256k;\n\tclient_header_buffer_size 500k;\n\tlarge_client_header_buffers 4 500k;\n\thttp2_max_field_size       500k;\n\thttp2_max_header_size      500k;\n\n\t# Needed websocket support (used by Ledger hardware wallets)\n\tmap $http_upgrade $connection_upgrade {\n    \tdefault upgrade;\n    \t''      close;\n\t}\n\n}\n")])])]),a("p",[e._v("Now test your Nginx config with "),a("code",[e._v("service nginx configtest")]),e._v(" and reload the config with "),a("code",[e._v("service nginx reload")]),e._v(".")]),e._v(" "),a("p",[e._v("Then, you need to make sure that BTCPayServer does not try to handle HTTPS on its side, you can do this by disabling it on your BTCPayServer instance.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BTCPAYGEN_EXCLUDE_FRAGMENTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BTCPAYGEN_EXCLUDE_FRAGMENTS")]),e._v(';nginx-https"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n")])])]),a("p",[e._v("Notice: If your BTCPay Server install has more than one domain (for example "),a("code",[e._v("WOOCOMMERCE_HOST")]),e._v(" or "),a("code",[e._v("BTCPAY_ADDITIONAL_HOSTS")]),e._v(") you will need to modify your config for each domain name. The example above only covers 1 domain name called "),a("code",[e._v("btcpay.domain.com")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"how-do-i-completely-uninstall-btcpay-from-a-linux-environment-docker-version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-completely-uninstall-btcpay-from-a-linux-environment-docker-version"}},[e._v("#")]),e._v(" How do I completely uninstall BTCPay from a linux environment (docker version)")]),e._v(" "),a("ol",[a("li",[e._v("Shutdown BTCPay Server (after you ensure you have required backups etc) with "),a("code",[e._v("btcpay-down.sh")]),e._v(" and cleanup the install with "),a("code",[e._v("btcpay-clean.sh")]),e._v(".")]),e._v(" "),a("li",[e._v("Change to your Base install directory "),a("code",[e._v('cd "$(dirname "$BTCPAY_ENV_FILE")"')])]),e._v(" "),a("li",[e._v("Delete all volumes in /var/lib/docker/volumes/ with "),a("code",[e._v("docker-compose -f $BTCPAY_DOCKER_COMPOSE down --v")])]),e._v(" "),a("li",[e._v("Remove other BTCPay system files with this: "),a("code",[e._v("rm /etc/systemd/system/btcpayserver.service && rm /etc/profile.d/btcpay-env.sh")])]),e._v(" "),a("li",[e._v("Go into /usr/local/bin and remove all of the symlinks that BTCPay put in there.  At the time of writing these were:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("bitcoin-cli.sh -> /root/BTCPayServer/btcpayserver-docker/bitcoin-cli.sh\nbitcoin-lncli.sh -> /root/BTCPayServer/btcpayserver-docker/bitcoin-lncli.sh\nbtcpay-admin.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-admin.sh\nbtcpay-clean.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-clean.sh\nbtcpay-down.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-down.sh\nbtcpay-restart.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-restart.sh\nbtcpay-setup.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-setup.sh\nbtcpay-up.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-up.sh\nbtcpay-update.sh -> /root/BTCPayServer/btcpayserver-docker/btcpay-update.sh\nchangedomain.sh -> /root/BTCPayServer/btcpayserver-docker/changedomain.sh\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[e._v("Remove your BTCPay installation folder with "),a("code",[e._v('rm -r "$(dirname "$BTCPAY_ENV_FILE")"')])]),e._v(" "),a("li",[e._v("Just to make sure, run "),a("code",[e._v("docker system prune")]),e._v(" after a reboot to get rid of any other docker related artifacts.")])]),e._v(" "),a("h2",{attrs:{id:"web-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-deployment"}},[e._v("#")]),e._v(" Web-deployment")]),e._v(" "),a("p",[e._v("Here you can find common questions and solutions to BTCPay web-deployments.")]),e._v(" "),a("h3",{attrs:{id:"lunanode-web-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lunanode-web-deployment"}},[e._v("#")]),e._v(" LunaNode web-deployment")]),e._v(" "),a("h4",{attrs:{id:"how-to-change-domain-name-on-my-lunanode-btcpay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-change-domain-name-on-my-lunanode-btcpay"}},[e._v("#")]),e._v(" How to change domain name on my LunaNode BTCPay?")]),e._v(" "),a("ol",[a("li",[e._v("In your LunaNode dashboard, click on Virtual Machines > Your Virtual Machine > General Tab > External IP. Copy the external IP.")]),e._v(" "),a("li",[e._v("Go to your DNS provider and create an A record. Paste the external IP.")]),e._v(" "),a("li",[e._v("Go to Server Settings > Maintenance > Change Domain. Paste yourdomain.com without http or https prefix.")])]),e._v(" "),a("p",[e._v("Additional documentation can be found on "),a("RouterLink",{attrs:{to:"/ChangeDomain.html"}},[e._v("domain change page")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"manual-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manual-deployment"}},[e._v("#")]),e._v(" Manual Deployment")]),e._v(" "),a("h4",{attrs:{id:"how-to-manually-install-btcpay-on-ubuntu-18-04"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-manually-install-btcpay-on-ubuntu-18-04"}},[e._v("#")]),e._v(" How to manually install BTCPay on Ubuntu 18.04?")]),e._v(" "),a("p",[e._v("Check this "),a("a",{attrs:{href:"https://freedomnode.com/blog/114/how-to-setup-btc-and-lightning-payment-gateway-with-btcpayserver-on-linux-manual-install",target:"_blank",rel:"noopener noreferrer"}},[e._v("community guide"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"i-get-503-service-temporarily-unavailable-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-get-503-service-temporarily-unavailable-nginx"}},[e._v("#")]),e._v(" I get 503 Service Temporarily Unavailable nginx")]),e._v(" "),a("h4",{attrs:{id:"cause-1-trying-to-access-my-btcpay-by-ip-address"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cause-1-trying-to-access-my-btcpay-by-ip-address"}},[e._v("#")]),e._v(" Cause 1: Trying to access my BTCPay by IP address")]),e._v(" "),a("p",[e._v("Your nginx config is set to route the HTTP request to a particular container based on the domain name of the request. For example, the official "),a("RouterLink",{attrs:{to:"/RPi4.html"}},[e._v("deployment on pi 4")]),e._v(" was to setup the souce domain name to http://raspberrypi.local/ yet getting automatic local domain raspberrypi.local does not always work. You are probably in this situation and trying to type the IP address of your BTCPay into the web-browser.")],1),e._v(" "),a("p",[e._v("Since nginx gets the IP address in the request instead of raspberrypi.local it does not know where to route that request and returns:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("503 Service Temporarily Unavailable\n-----------------------------------\nnginx\n")])])]),a("p",[e._v("You can fix this by forcing nginx to route the HTTP request to BTCPay even if the request domain name is not recognized.\nSimply, re-run the setup script like this:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("su")]),e._v(" -\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("REVERSEPROXY_DEFAULT_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BTCPAY_HOST")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" btcpay-setup.sh -i\n\n")])])]),a("p",[e._v("Now putting local IP in the web-browser works.")]),e._v(" "),a("h4",{attrs:{id:"cause-2-btcpayserver-or-letsencrypt-nginx-proxy-is-not-running"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cause-2-btcpayserver-or-letsencrypt-nginx-proxy-is-not-running"}},[e._v("#")]),e._v(" Cause 2: btcpayserver or letsencrypt-nginx-proxy is not running")]),e._v(" "),a("p",[e._v("To check, run:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v("  docker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("less")]),e._v(" -S\n")])])]),a("p",[e._v('Press "q" to quit out of less.')]),e._v(" "),a("p",[e._v("The output should contain:")]),e._v(" "),a("ul",[a("li",[e._v("btcpayserver/letsencrypt-nginx-proxy-companion")]),e._v(" "),a("li",[e._v("btcpayserver/btcpayserver")])]),e._v(" "),a("p",[e._v('And the status should be "Up"')]),e._v(" "),a("p",[e._v("If the docker container is not running, then check the reason for crash like this:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v("  docker logs 6a6b9fd75692 --tail "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n")])])]),a("p",[e._v("Where 6a6b9fd75692 is the container ID that is having issues.")]),e._v(" "),a("h4",{attrs:{id:"cause-3-btcpay-is-expecting-you-to-access-this-website-from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cause-3-btcpay-is-expecting-you-to-access-this-website-from"}},[e._v("#")]),e._v(" Cause 3: BTCPay is expecting you to access this website from")]),e._v(" "),a("p",[e._v("You might also see the following error: "),a("code",[e._v("You access BTCPay Server over an unsecured network")]),e._v(".")]),e._v(" "),a("p",[e._v("You might see this error on the front page of your BTCPay Server since version "),a("code",[e._v("1.0.3.73")]),e._v(".")]),e._v(" "),a("p",[e._v("This is caused by a breaking change made in BTCPay to be able to handle different domain on the same server.")]),e._v(" "),a("p",[e._v("It happens because your BTCPay Server is not exposed directly on internet, instead a reverse proxy (like nginx or IIS) receive the request and forward it to BTCPay Server.")]),e._v(" "),a("p",[e._v("Sadly, depending on the configuration of your reverse proxy, either the HTTP HOST header has been replaced, or the reverse proxy did not forwarded the protocol at the front with the http header "),a("code",[e._v("X-Forwarded-Proto")]),e._v(".")]),e._v(" "),a("p",[e._v("If you use NGinx, here is what you need to have at the top level in "),a("code",[e._v("/etc/nginx/conf.d/default.conf")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("map $http_x_forwarded_proto $proxy_x_forwarded_proto {\n  default $http_x_forwarded_proto;\n  ''      $scheme;\n}\nproxy_set_header Host $http_host;\nproxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;\n\nserver_names_hash_bucket_size 128;\nproxy_buffer_size          128k;\nproxy_buffers              4 256k;\nproxy_busy_buffers_size    256k;\nclient_header_buffer_size 500k;\nlarge_client_header_buffers 4 500k;\nhttp2_max_field_size       500k;\nhttp2_max_header_size      500k;\n")])])]),a("p",[e._v("If your reverse proxy is Apache 2, you need to set those two settings")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<VirtualHost *:443>\n    RequestHeader set X-Forwarded-Proto "https"\n    ProxyPreserveHost on\n...\n</VirtualHost>\n')])])]),a("p",[e._v("You will also need those settings in the "),a("code",[e._v("apache2.conf")]),e._v(" to prevent issues while signing PSBTs.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LimitRequestLine 500000\nLimitRequestFieldSize 500000\n")])])]),a("h4",{attrs:{id:"cause-4-getting-500-nginx-error-on-a-local-server-https-and-for-http-btcpay-is-expecting-you-to-access-this-website-from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cause-4-getting-500-nginx-error-on-a-local-server-https-and-for-http-btcpay-is-expecting-you-to-access-this-website-from"}},[e._v("#")]),e._v(" Cause 4: Getting 500 nginx error on a local server https and for http BTCPay is expecting you to access this website from")]),e._v(" "),a("p",[e._v("You need to open port 80 and 443. Once you did that, restart docker "),a("code",[e._v("btcpay-restart.sh")])]),e._v(" "),a("h4",{attrs:{id:"cause-n-other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cause-n-other"}},[e._v("#")]),e._v(" Cause N: Other")]),e._v(" "),a("p",[e._v("There could be many causes for 5XX HTTP errors. Please create an "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("Issue"),a("OutboundLink")],1),e._v(" and when cause becomes known add it here in the "),a("RouterLink",{attrs:{to:"/FAQ/FAQ-Deployment.html"}},[e._v("Deployment FAQ")]),e._v(" doc.")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);